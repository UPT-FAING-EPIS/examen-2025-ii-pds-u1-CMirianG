name: Deploy Application

on:
  push:
    branches: [ main ]
    paths-ignore: [ 'infrastructure/**', 'docs/**', '*.md' ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: GPSAlumniBT
  AZURE_WEBAPP_PACKAGE_PATH: './backend/AttendanceSystem.API/publish'
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '18'

jobs:
  build-and-deploy-backend:
    name: Build and Deploy Backend
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: |
        cd backend/AttendanceSystem.API
        dotnet restore

    - name: Build application
      run: |
        cd backend/AttendanceSystem.API
        dotnet build --configuration Release --no-restore

    - name: Run tests
      run: |
        cd backend
        if [ -d "AttendanceSystem.Tests" ]; then
          dotnet test --configuration Release --no-build --verbosity normal
        else
          echo "No tests found, skipping test execution"
        fi

    - name: Publish application
      run: |
        cd backend/AttendanceSystem.API
        dotnet publish --configuration Release --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Run database migrations
      run: |
        cd backend/AttendanceSystem.API
        dotnet tool install --global dotnet-ef
        dotnet ef database update --connection "${{ secrets.AZURE_SQL_CONNECTION_STRING }}"

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_API }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Health Check - Backend
      run: |
        echo "Waiting for deployment to complete..."
        sleep 30
        
        # Get the app URL from Azure or use default
        APP_URL="https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
        
        # Health check with retry
        for i in {1..5}; do
          echo "Health check attempt $i/5"
          if curl -f -s "$APP_URL/swagger/index.html" > /dev/null; then
            echo "✅ Backend health check passed"
            echo "backend_url=$APP_URL" >> $GITHUB_OUTPUT
            break
          else
            echo "❌ Health check failed, retrying in 30 seconds..."
            sleep 30
          fi
          
          if [ $i -eq 5 ]; then
            echo "❌ Backend health check failed after 5 attempts"
            exit 1
          fi
        done

  build-and-deploy-frontend:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    needs: build-and-deploy-backend
    environment: production
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Update API URL for production
      run: |
        cd frontend/src/services
        # Update API base URL to production backend
        sed -i "s|http://localhost:5000/api|https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/api|g" api.ts

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "./frontend"
        api_location: ""
        output_location: "dist"
        skip_app_build: true
