name: SonarQube Analysis

on:
  workflow_dispatch:

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Cache SonarQube packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Install SonarScanner for .NET
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global dotnet-coverage

    - name: Install dependencies
      run: |
        cd backend/AttendanceSystem.API
        dotnet restore
        cd ../../frontend
        npm ci

    - name: Start SonarQube analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet sonarscanner begin \
          /k:"examen-2025-ii-pds-u1-CMirianG" \
          /o:"cmiriang" \
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.cs.vscoveragexml.reportsPaths="**/coverage.xml" \
          /d:sonar.javascript.lcov.reportPaths="frontend/coverage/lcov.info" \
          /d:sonar.exclusions="**/node_modules/**,**/bin/**,**/obj/**,**/*.js.map,**/wwwroot/lib/**" \
          /d:sonar.coverage.exclusions="**/Program.cs,**/Startup.cs,**/*Tests*/**,**/test/**,**/tests/**" \
          /d:sonar.cpd.exclusions="**/Migrations/**"

    - name: Build and test backend
      run: |
        cd backend/AttendanceSystem.API
        dotnet build --configuration Release --no-restore

    - name: End SonarQube analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
